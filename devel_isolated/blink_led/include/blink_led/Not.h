// Generated by gencpp from file blink_led/Not.msg
// DO NOT EDIT!


#ifndef BLINK_LED_MESSAGE_NOT_H
#define BLINK_LED_MESSAGE_NOT_H

#include <ros/service_traits.h>


#include <blink_led/NotRequest.h>
#include <blink_led/NotResponse.h>


namespace blink_led
{

struct Not
{

typedef NotRequest Request;
typedef NotResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Not
} // namespace blink_led


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::blink_led::Not > {
  static const char* value()
  {
    return "7f50a0320e6f52448307d13d74286d59";
  }

  static const char* value(const ::blink_led::Not&) { return value(); }
};

template<>
struct DataType< ::blink_led::Not > {
  static const char* value()
  {
    return "blink_led/Not";
  }

  static const char* value(const ::blink_led::Not&) { return value(); }
};


// service_traits::MD5Sum< ::blink_led::NotRequest> should match 
// service_traits::MD5Sum< ::blink_led::Not > 
template<>
struct MD5Sum< ::blink_led::NotRequest>
{
  static const char* value()
  {
    return MD5Sum< ::blink_led::Not >::value();
  }
  static const char* value(const ::blink_led::NotRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::blink_led::NotRequest> should match 
// service_traits::DataType< ::blink_led::Not > 
template<>
struct DataType< ::blink_led::NotRequest>
{
  static const char* value()
  {
    return DataType< ::blink_led::Not >::value();
  }
  static const char* value(const ::blink_led::NotRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::blink_led::NotResponse> should match 
// service_traits::MD5Sum< ::blink_led::Not > 
template<>
struct MD5Sum< ::blink_led::NotResponse>
{
  static const char* value()
  {
    return MD5Sum< ::blink_led::Not >::value();
  }
  static const char* value(const ::blink_led::NotResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::blink_led::NotResponse> should match 
// service_traits::DataType< ::blink_led::Not > 
template<>
struct DataType< ::blink_led::NotResponse>
{
  static const char* value()
  {
    return DataType< ::blink_led::Not >::value();
  }
  static const char* value(const ::blink_led::NotResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // BLINK_LED_MESSAGE_NOT_H
